{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Andela\\\\my-brand-backend-shimwe\\\\dist\\\\Backend\\\\SRC\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\Andela\\\\my-brand-backend-shimwe\",\"filename\":\"D:\\\\Andela\\\\my-brand-backend-shimwe\\\\dist\\\\Backend\\\\SRC\\\\test\\\\blogTest.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Andela\\\\my-brand-backend-shimwe\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//const chai = require('chai');\nconst chai_1 = __importDefault(require(\"chai\"));\nconst chai_http_1 = __importDefault(require(\"chai-http\"));\n//const chaiHttp = require('chai-http');\nconst app = require('../app');\nconst expect = chai_1.default.expect;\nchai_1.default.use(chai_http_1.default);\ndescribe('Blog Controller', () => {\n  let previousLikes;\n  describe('addBlog', () => {\n    it('should add a new blog', done => {\n      chai_1.default.request(app).post('/blogs/newBlogg').send({\n        title: 'Test Blog',\n        content: 'This is a test blog content',\n        imageUrl: 'https://example.com/image.jpg'\n      }).end((err, res) => {\n        expect(res).to.have.status(201);\n        expect(res.body).to.be.an('object');\n        expect(res.body).to.have.property('title', 'Test Blog');\n        expect(res.body).to.have.property('content', 'This is a test blog content');\n        expect(res.body).to.have.property('imageUrl', 'https://example.com/image.jpg');\n        done();\n      });\n    });\n  });\n  describe('updateBlog', () => {\n    it('should update an existing blog', done => {\n      chai_1.default.request(app).put('/blogs/1').send({\n        title: 'Updated Blog',\n        content: 'This is updated content',\n        imageUrl: 'https://example.com/updated-image.jpg'\n      }).end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an('object');\n        expect(res.body).to.have.property('title', 'Updated Blog');\n        expect(res.body).to.have.property('content', 'This is updated content');\n        expect(res.body).to.have.property('imageUrl', 'https://example.com/updated-image.jpg');\n        done();\n      });\n    });\n  });\n  it('should delete an existing blog', done => {\n    const blogId = 'blogId';\n    chai_1.default.request(app).delete(`/blogs/${blogId}`).end((err, res) => {\n      expect(res).to.have.status(200);\n      expect(res.body).to.be.an('object');\n      expect(res.body).to.have.property('message', 'Blog deleted successfully');\n      done();\n    });\n  });\n  it('should return all blogs', done => {\n    chai_1.default.request(app).get('/blogs/allBlogs').end((err, res) => {\n      expect(res).to.have.status(200);\n      expect(res.body).to.be.an('array');\n      done();\n    });\n  });\n  it('should return a single blog by ID', done => {\n    const blogId = 1;\n    chai_1.default.request(app).get(`/blogs/${blogId}`).end((err, res) => {\n      expect(res).to.have.status(200);\n      expect(res.body).to.be.an('object');\n      done();\n    });\n  });\n  it('should add a comment to a blog', done => {\n    const blogId = 1;\n    chai_1.default.request(app).post(`/blogs/${blogId}/comments`).send({\n      author: 'Test User',\n      content: 'This is a test comment'\n    }).end((err, res) => {\n      expect(res).to.have.status(200);\n      expect(res.body).to.be.an('object');\n      expect(res.body).to.have.property('author', 'Test User');\n      expect(res.body).to.have.property('content', 'This is a test comment');\n      done();\n    });\n  });\n  it('should increment the likes of a blog', done => {\n    const blogId = 1;\n    chai_1.default.request(app).put(`/blogs/${blogId}/like`).end((err, res) => {\n      previousLikes = res.body.likes;\n      expect(res).to.have.status(200);\n      expect(res.body).to.be.an('object');\n      expect(res.body.likes).to.equal(previousLikes + 1);\n      done();\n    });\n  });\n  it('should decrement the likes of a blog', done => {\n    const blogId = 'your_blog_id_here';\n    chai_1.default.request(app).put(`/blogs/${blogId}/unlike`).end((err, res) => {\n      expect(res).to.have.status(200);\n      expect(res.body).to.be.an('object');\n      expect(res.body.likes).to.equal(previousLikes - 1);\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","chai_1","require","chai_http_1","app","expect","default","use","describe","previousLikes","it","done","request","post","send","title","content","imageUrl","end","err","res","to","have","status","body","be","an","property","put","blogId","delete","get","author","likes","equal"],"sourceRoot":"D:\\Andela\\my-brand-backend-shimwe\\dist\\Backend\\SRC\\test\\","sources":["blogTest.test.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//const chai = require('chai');\nconst chai_1 = __importDefault(require(\"chai\"));\nconst chai_http_1 = __importDefault(require(\"chai-http\"));\n//const chaiHttp = require('chai-http');\nconst app = require('../app');\nconst expect = chai_1.default.expect;\nchai_1.default.use(chai_http_1.default);\ndescribe('Blog Controller', () => {\n    let previousLikes;\n    describe('addBlog', () => {\n        it('should add a new blog', (done) => {\n            chai_1.default.request(app)\n                .post('/blogs/newBlogg')\n                .send({\n                title: 'Test Blog',\n                content: 'This is a test blog content',\n                imageUrl: 'https://example.com/image.jpg'\n            })\n                .end((err, res) => {\n                expect(res).to.have.status(201);\n                expect(res.body).to.be.an('object');\n                expect(res.body).to.have.property('title', 'Test Blog');\n                expect(res.body).to.have.property('content', 'This is a test blog content');\n                expect(res.body).to.have.property('imageUrl', 'https://example.com/image.jpg');\n                done();\n            });\n        });\n    });\n    describe('updateBlog', () => {\n        it('should update an existing blog', (done) => {\n            chai_1.default.request(app)\n                .put('/blogs/1')\n                .send({\n                title: 'Updated Blog',\n                content: 'This is updated content',\n                imageUrl: 'https://example.com/updated-image.jpg'\n            })\n                .end((err, res) => {\n                expect(res).to.have.status(200);\n                expect(res.body).to.be.an('object');\n                expect(res.body).to.have.property('title', 'Updated Blog');\n                expect(res.body).to.have.property('content', 'This is updated content');\n                expect(res.body).to.have.property('imageUrl', 'https://example.com/updated-image.jpg');\n                done();\n            });\n        });\n    });\n    it('should delete an existing blog', (done) => {\n        const blogId = 'blogId';\n        chai_1.default.request(app)\n            .delete(`/blogs/${blogId}`)\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.an('object');\n            expect(res.body).to.have.property('message', 'Blog deleted successfully');\n            done();\n        });\n    });\n    it('should return all blogs', (done) => {\n        chai_1.default.request(app)\n            .get('/blogs/allBlogs')\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.an('array');\n            done();\n        });\n    });\n    it('should return a single blog by ID', (done) => {\n        const blogId = 1;\n        chai_1.default.request(app)\n            .get(`/blogs/${blogId}`)\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.an('object');\n            done();\n        });\n    });\n    it('should add a comment to a blog', (done) => {\n        const blogId = 1;\n        chai_1.default.request(app)\n            .post(`/blogs/${blogId}/comments`)\n            .send({\n            author: 'Test User',\n            content: 'This is a test comment',\n        })\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.an('object');\n            expect(res.body).to.have.property('author', 'Test User');\n            expect(res.body).to.have.property('content', 'This is a test comment');\n            done();\n        });\n    });\n    it('should increment the likes of a blog', (done) => {\n        const blogId = 1;\n        chai_1.default.request(app)\n            .put(`/blogs/${blogId}/like`)\n            .end((err, res) => {\n            previousLikes = res.body.likes;\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.an('object');\n            expect(res.body.likes).to.equal(previousLikes + 1);\n            done();\n        });\n    });\n    it('should decrement the likes of a blog', (done) => {\n        const blogId = 'your_blog_id_here';\n        chai_1.default.request(app)\n            .put(`/blogs/${blogId}/unlike`)\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.an('object');\n            expect(res.body.likes).to.equal(previousLikes - 1);\n            done();\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}},"mtime":1711966399019}}